{"mappings":"YAAA,IAQIA,EAEAC,EAVEC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,UAAWL,SAASC,cAAc,iBA4BpC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GASpC,OARAC,YAAW,WACLN,EACFI,EAAQ,CAACG,SAAAT,EAAUU,MAAAT,IAEnBM,EAAO,CAACE,SAAAT,EAAUU,MAAAT,G,GAEnBA,GAEI,CAACQ,SAAAT,EAAUU,MAAAT,E,IAIZU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACxBI,QAAQC,IAAI,uBAAwCC,OAAfP,EAAS,QAAYO,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUS,EAAKN,EAALF,MAClBI,QAAQC,IAAI,sBAAqCC,OAAfP,EAAS,QAAYO,OAANE,EAAM,M,IAvC3D3B,EAAKC,KAAK2B,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAIC,iBAGFhC,EAAQiC,OAAO/B,EAAKI,WAAW4B,OAC/BjC,EAAkBgC,OAAO/B,EAAKM,YAAY0B,OAC1CC,KAAOF,OAAO/B,EAAKK,UAAU2B,OAG7B,IAFA,IAAId,EAAW,EAEPgB,EAAI,EAAGA,GAAKnC,EAAiBmC,IACnC1B,EAAcU,EAAUpB,GACxByB,QAAQC,IAAI,aAAcN,EAAW,WAAYpB,GACjDA,GAASmC,KACTf,GAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('.form button')\n}\n\nlet delay;\nlet amount;\nlet currentPosition;\n\nlet formData = {};\nrefs.form.addEventListener('submit', onSubmitEvt);\n\nfunction onSubmitEvt(evt){\n  evt.preventDefault();\n    // const {elements: {delay, step, amount}} = evt.currentTarget;\n    // console.log(delay.value, step.value, amount.value);\n    delay = Number(refs.delayInput.value);\n    currentPosition = Number(refs.amountInput.value);\n    step = Number(refs.stepInput.value);\n    let position = 1;\n\n    for(let i = 1; i <= currentPosition; i++){\n      createPromise(position, delay);\n      console.log('position: ', position + ' delay: ', delay)\n      delay += step;\n      position +=1;\n    }\n};\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n\n    return {position, delay};\n  });\n\n\n  promise.then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$currentPosition","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","submitBtn","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","delay2","console","log","concat","catch","delay3","addEventListener","evt","preventDefault","Number","value","step","i"],"version":3,"file":"03-promises.a02102d7.js.map"}